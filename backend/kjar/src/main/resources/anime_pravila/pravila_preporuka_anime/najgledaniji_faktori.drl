package pravila_preporuka_anime;

import com.ftn.sbnz.tim27.model.models.*;
import java.util.List;

rule "prebroji anime zanrove iz trenutne liste korisnika"
when
    $korisnik: Korisnik($animeLista: trenutno_gledanje)
    $anime: Anime(zanrovi != null, !zanrovi.isEmpty()) from $animeLista
    $zanr: Zanr() from $anime.getZanrovi()
    $brojaci: List() from collect(ZanrBrojac())
    $zanrBrojac: ZanrBrojac(zanr.id == $zanr.getId()) from $brojaci
then
//    modify($zanrBrojac){
//        brojac = brojac + 1
//    }
    $zanrBrojac.povecajBrojac();
end

rule "prebroji anime zanrove iz istorije gledanja korisnika"
when
    $korisnik: Korisnik($animeLista: istorija)
    $anime: Anime(zanrovi != null, !zanrovi.isEmpty()) from $animeLista
    $zanr: Zanr() from $anime.getZanrovi()
    $brojaci: List() from collect(ZanrBrojac())
    $zanrBrojac: ZanrBrojac(zanr.id == $zanr.getId()) from $brojaci
then
//    modify($zanrBrojac){
//        brojac = brojac + 1
//    }
    $zanrBrojac.povecajBrojac();
end

rule "prebroji anime zanrove iz liste planiranih naslova korisnika"
when
    $korisnik: Korisnik($animeLista: planira_gledanje)
    $anime: Anime(zanrovi != null, !zanrovi.isEmpty()) from $animeLista
    $zanr: Zanr() from $anime.getZanrovi()
    $brojaci: List() from collect(ZanrBrojac())
    $zanrBrojac: ZanrBrojac(zanr.id == $zanr.getId()) from $brojaci
then
    $zanrBrojac.povecajBrojac();
end

rule "prebroji anime studija iz trenutne liste korisnika"
when
    $korisnik: Korisnik($animeLista: trenutno_gledanje)
    $anime: Anime(studiji != null) from $animeLista
    $studio: Studio() from $anime.getStudiji()
    $brojaci: List() from collect(StudioBrojac())
    $studioBrojac: StudioBrojac(studio.id == $studio.getId()) from $brojaci
then
    $studioBrojac.povecajBrojac();
end

rule "prebroji anime studija iz istorije gledanja korisnika"
when
    $korisnik: Korisnik($animeLista: istorija)
    $anime: Anime(studiji != null) from $animeLista
    $studio: Studio() from $anime.getStudiji()
    $brojaci: List() from collect(StudioBrojac())
    $studioBrojac: StudioBrojac(studio.id == $studio.getId()) from $brojaci
then
    $studioBrojac.povecajBrojac();
end

rule "prebroji anime studija iz liste planiranih naslova korisnika"
when
    $korisnik: Korisnik($animeLista: planira_gledanje)
    $anime: Anime(studiji != null) from $animeLista
    $studio: Studio() from $anime.getStudiji()
    $brojaci: List() from collect(StudioBrojac())
    $studioBrojac: StudioBrojac(studio.id == $studio.getId()) from $brojaci
then
    $studioBrojac.povecajBrojac();
end

rule "nadji najgledaniji anime zanr"
when
    $zanrBrojaci: List() from collect(ZanrBrojac())
    $maxBrojac: Integer() from accumulate(
        ZanrBrojac($brojac : brojac) from $zanrBrojaci,
        max($brojac)
    )
    $najgledanijiZanrovi: List() from collect(
        ZanrBrojac(brojac == $maxBrojac) from $zanrBrojaci
    )
    not(ZanrBrojac(brojac > $maxBrojac) from $zanrBrojaci)
    $najgledanijiZanr: ZanrBrojac() from $najgledanijiZanrovi.get(0)
then
    insert($najgledanijiZanr.getZanr());
end

rule "nadji najgledaniji anime studio"
when
    $studioBrojaci: List() from collect(StudioBrojac())
    $maxBrojac: Integer() from accumulate(
        StudioBrojac($brojac : brojac) from $studioBrojaci,
        max($brojac)
    )
    $najgledanijiStudiji: List() from collect(
        StudioBrojac(brojac == $maxBrojac) from $studioBrojaci
    )
    not(StudioBrojac(brojac > $maxBrojac) from $studioBrojaci)
    $najgledanijiStudio: StudioBrojac() from $najgledanijiStudiji.get(0)
then
    insert($najgledanijiStudio.getStudio());
end